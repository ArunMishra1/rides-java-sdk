apply plugin: 'distribution'
apply plugin: 'net.researchgate.release'
apply plugin: 'co.riiid.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.7'
        classpath 'net.researchgate:gradle-release:2.2.2'
        classpath 'co.riiid:gradle-github-plugin:0.3.0'
    }
}

allprojects {
    apply plugin: 'checkstyle'
    apply plugin: 'maven'
    apply plugin: 'net.saliman.cobertura'

    repositories {
        jcenter()
    }

    dependencies {
        compile 'org.slf4j:slf4j-log4j12:1.7.5'
    }

    checkstyle {
        toolVersion = "6.4.1"
    }

    cobertura {
        coverageFormats = ['html', 'xml']
        coverageIgnoreTrivial = true
        coverageCheckTotalLineRate = 100
        coverageCheckTotalBranchRate = 100
    }

    task checkstyleMain(type: Checkstyle, overwrite: true) {
        configFile = new File("{$project.projectDir}/config/checkstyle/checkstyle-main.xml")
    }

    task checkstyleTest(type: Checkstyle, overwrite: true) {
        configFile = new File("{$project.projectDir}/config/checkstyle/checkstyle-test.xml")
    }

    release {
        failOnCommitNeeded = false
        failOnPublishNeeded = false
        failOnSnapshotDependencies = false
        revertOnFail = true
        tagTemplate = "v${version}"
    }
}

afterReleaseBuild.dependsOn uploadArchives

github {
    owner = 'uber'
    repo = 'rides-java-sdk'
    token = githubToken
    tagName = "v${version}"
    targetCommitish = 'master'
    name = "v${version}"
    body = "sample"

    assets = [
            //cmdlinesampleDistZip.archivePath,
            //"${project.projectDir}/build/distributions/servlet-sample-${version}.zip",
    ]
}

distributions {
    publicrepo {
        baseName = 'publicrepo'
        contents {
            from(rootDir) {
                include 'build.gradle'
                include 'CHANGELOG.md'
                include 'gradle.properties'
                include 'gradlew'
                include 'gradlew.bat'
                include 'LICENSE'
                include 'README.md'
                include 'settings.gradle'
                include 'gradle/'
            }

            from('sdk') {
                filter { String line ->
                    line.replaceAll("@version@", version)
                }
                exclude 'build'
                exclude '*.iml'
                into 'sdk'
            }

            from('samples') {
                exclude '**/build'
                exclude '**/*.iml'
                into 'samples'
            }
        }
    }

    cmdlinesample {
        baseName = 'cmdline-sample'
        contents {
            from('samples/cmdline-sample') {
                filter { String line ->
                    line.replaceAll("compile project\\(':sdk'\\)", "compile '${group}:${artifactId}:${version}'")
                }
                into '.'
                exclude 'build'
                exclude '*.iml'
            }
        }
    }

    servletsample {
        baseName = 'servlet-sample'
        contents {
            from('samples/servlet-sample') {
                filter { String line ->
                    line.replaceAll("compile project\\(':sdk'\\)", "compile '${group}:${artifactId}:${version}'")
                }
                into '.'
                exclude 'build'
                exclude '*.iml'
            }
        }
    }
}